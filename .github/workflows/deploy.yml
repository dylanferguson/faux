name: Deploy
on:
  push:
    branches:
      - master
  repository_dispatch:
    types: [contentful_publish]
jobs:
  deploy:
    name: "Deploy to Cloudflare Workers"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache Next bundles between builds
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - uses: volta-cli/action@v3
      - name: Predeploy
        run: |
          npm ci
          npm run predeploy
          sed -i s/{{CF_ACCOUNT_ID}}/${{ secrets.CF_ACCOUNT_ID }}/g wrangler.toml
          sed -i s/{{CF_ZONE_ID}}/${{ secrets.CF_ZONE_ID }}/g wrangler.toml
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
          NEXT_PUBLIC_ALGOLIA_APP_ID: ${{ secrets.NEXT_PUBLIC_ALGOLIA_APP_ID }}
          NEXT_PUBLIC_ALGOLIA_SEARCH_ONLY_API_KEY: ${{ secrets.NEXT_PUBLIC_ALGOLIA_SEARCH_ONLY_API_KEY }}
          NEXT_PUBLIC_ALGOLIA_INDEX: ${{ secrets.NEXT_PUBLIC_ALGOLIA_INDEX }}
          NEXT_PUBLIC_GA_TRACKING_ID: ${{ secrets.NEXT_PUBLIC_GA_TRACKING_ID }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
      - name: Deploy
        uses: cloudflare/wrangler-action@1.1.0
        with:
          apiToken: ${{ secrets.CF_API_KEY }}
          environment: "production"
  lighthouse:
    name: Lighthouse audit
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    needs: deploy
    steps:
      - uses: actions/checkout@v2
      - name: Audit prod performance using Lighthouse
        uses: treosh/lighthouse-ci-action@v3
        with:
          configPath: ./lighthouserc.js
          serverBaseUrl: ${{ secrets.LHCI_SERVER_BASE_URL }}
          serverToken: ${{ secrets.LHCI_BUILD_TOKEN }}
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
  linkcheck:
    name: Link check
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "`linkcheck` deployment"
        run: |
          curl -s https://api.github.com/repos/filiph/linkcheck/releases/latest | jq '.assets[] | select(.name|test("linux-x64")) | .browser_download_url' | xargs curl -sL | tar -xz --strip-components 1
          chmod +x linkcheck
          ./linkcheck --external https://faux.digital --skip-file .github/workflows/linkcheck-skipfile.txt
