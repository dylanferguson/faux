name: CI
on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - master
jobs:
  static_analysis:
    name: Static analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node install
        shell: bash -l {0}
        run: |
          nvm install
          nvm use
      - run: |
          npm ci
          npm run format:check
          npm run lint
          npx tsc --noEmit -p ./tsconfig.json
      - name: Lint Dockerfile
        uses: brpaz/hadolint-action@master
        with:
          dockerfile: "Dockerfile"
  vercel_deploy:
    name: Test setup
    runs-on: ubuntu-latest
    outputs:
      preview_url: ${{ steps.waitForVercelPreviewDeployment.outputs.url }}
    steps:
      - name: Wait for Vercel preview deployment to complete
        uses: patrickedqvist/wait-for-vercel-preview@v1.2.0
        id: waitForVercelPreviewDeployment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 120
  cypress:
    name: End-to-end tests
    needs: vercel_deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node install
        shell: bash -l {0}
        run: |
          nvm install
          nvm use
      - run: npm ci
      - name: Run Cypress
        uses: cypress-io/github-action@v2
        with:
          config: baseUrl=${{ needs.vercel_deploy.outputs.preview_url }}
          install: false
  lighthouse:
    name: Lighthouse audit
    needs: vercel_deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: sed -i 's|https://faux.digital|${{ needs.vercel_deploy.outputs.preview_url }}|g' ./lighthouserc.js
      - name: Audit Vercel preview URL using Lighthouse
        uses: treosh/lighthouse-ci-action@v3
        with:
          configPath: ./lighthouserc.js
          temporaryPublicStorage: true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
  a11y:
    name: A11y audit
    needs: vercel_deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run a11y audit via Pa11y
        run: |
          sed -i 's|https://faux.digital|${{ needs.vercel_deploy.outputs.preview_url }}|g' .pa11yci.json
          npx pa11y-ci@2.x --config .pa11yci.json
  linkcheck:
    name: Link check
    needs: vercel_deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "`linkcheck` deployment"
        run: |
          curl -s https://api.github.com/repos/filiph/linkcheck/releases/latest | jq '.assets[] | select(.name|test("linux-x64")) | .browser_download_url' | xargs curl -sL | tar -xz --strip-components 1
          chmod +x linkcheck
          ./linkcheck --external ${{ needs.vercel_deploy.outputs.preview_url }} --skip-file .github/workflows/linkcheck-skipfile.txt
